[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "R notes",
    "section": "",
    "text": "前言\n这一个用来记录本人在学习和使用R语言中的一些笔记。\n包括一些函数的用法，生物信息常用的作图等。\n鉴于本人水平有限， 错漏之处难免， 欢迎指出错误或提出改进意见。\n邮箱: mixfruitszu@gmail.com\ngithub\nRnotes",
    "crumbs": [
      "前言"
    ]
  },
  {
    "objectID": "总结.html",
    "href": "总结.html",
    "title": "2  总结",
    "section": "",
    "text": "总结\n\n1 + 1\n\n[1] 2",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>总结</span>"
    ]
  },
  {
    "objectID": "使用R语言画ISME中的进化树.html",
    "href": "使用R语言画ISME中的进化树.html",
    "title": "1  使用R语言画ISME中的进化树",
    "section": "",
    "text": "1.1 加载R包\nrm(list = ls())\n\nlibrary(tidyverse)\nlibrary(ggtree)\nlibrary(treeio)\nlibrary(tidytree)\nlibrary(ggfun)\nlibrary(aplot)\nlibrary(ggnewscale)\nlibrary(patchwork)\nlibrary(ggstar)",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>使用R语言画*ISME*中的进化树</span>"
    ]
  },
  {
    "objectID": "使用R语言画ISME中的进化树.html#加载数据",
    "href": "使用R语言画ISME中的进化树.html#加载数据",
    "title": "1  使用R语言画ISME中的进化树",
    "section": "1.2 加载数据",
    "text": "1.2 加载数据\n\n####----load Data----####\ntree &lt;- treeio::read.newick(file = \"./data/WRKY_TAIR.pep.muscle_1.treefile\",\n                            node.label = \"support\")\n\ntree2 &lt;- root(tree %&gt;% as.phylo(), node=78)\n\nget_taxa_name(root(tree %&gt;% as.phylo(),\n                   node=78) %&gt;%\n                ggtree(., branch.length=\"none\") ) -&gt; tree.sort.id\n\nstar_data &lt;- read_delim(file = \"./data/star_data_1.csv\", col_names = T, delim = \",\")\n\ngroup_info &lt;- read_delim(file = \"./data/group_info_1.csv\", delim = \",\", col_names = T)\n\n\nannotation_df &lt;- read_delim(file = \"./data/annotation_df_1.csv\",\n                            delim = \",\",\n                            col_names = T)\n\nbar_df &lt;- read_delim(file = \"./data/bar_df_1.csv\", delim = \",\", col_names = T)",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>使用R语言画*ISME*中的进化树</span>"
    ]
  },
  {
    "objectID": "使用R语言画ISME中的进化树.html#画进化树",
    "href": "使用R语言画ISME中的进化树.html#画进化树",
    "title": "1  使用R语言画ISME中的进化树",
    "section": "1.3 画进化树",
    "text": "1.3 画进化树\n\n####----Tree Plot----####\n\ntree_df &lt;- as_tibble(tree) %&gt;%\n  dplyr::left_join(star_data, by = c(\"label\" = \"ID\"))\n\nas_tibble(tree)\n\n# A tbl_tree abstraction: 142 × 5\n# which can be converted to treedata or phylo \n# via as.treedata or as.phylo\n   parent  node branch.length label     support\n    &lt;int&gt; &lt;int&gt;         &lt;dbl&gt; &lt;chr&gt;       &lt;dbl&gt;\n 1     73     1         2.49  AT2G40750      NA\n 2     73     2         2.67  AT3G56400      NA\n 3     84     3         1.70  AT1G18860      NA\n 4     85     4         1.19  AT5G15130      NA\n 5     85     5         1.98  AT1G68150      NA\n 6     83     6         2.17  AT1G69810      NA\n 7     86     7         1.06  AT4G01720      NA\n 8     87     8         1.23  AT1G62300      NA\n 9     88     9         0.364 AT4G22070      NA\n10     88    10         0.385 AT4G04450      NA\n# ℹ 132 more rows\n\np1 &lt;- ggtree(tree2) %&lt;+% tree_df  +\n  geom_nodepoint() + \n  geom_tiplab(align = T, offset = 0.3) +\n  # geom_nodelab(aes(label = node)) +\n  geom_tippoint(aes(color = star), x = 10, size = 5) +\n  # geom_star(aes(starshape = star, fill = star), starshape = 1, x = 10)+\n  scale_color_manual(values = \"#ef3b2c\",na.translate=FALSE, name = \"Signif\") + \n  theme_tree() + \n  theme(legend.background = element_roundrect(color = \"#969696\")) + \n  xlim(NA, 10)\n\np1\n\n\n\n\n\n\n\n# p2 &lt;- scaleClade(p1, 78, 1) %&gt;%\n#   collapse(78, 'max', fill=\"darkgreen\") +\np2 &lt;- p1+\n  # annotate(geom = \"text\", x = 6, y= 4.5, label = \"OutGroup\") + \n  geom_hilight(node = 80,\n               type = \"gradient\", \n               gradient.direction = 'tr',\n               alpha = .8,\n               fill = \"#addd8e\",\n               to.bottom = T,\n               extend = 5.5\n  ) + \n  geom_hilight(node = 104,\n               type = \"gradient\", \n               gradient.direction = 'tr',\n               alpha = .8,\n               fill = \"#41ab5d\",\n               to.bottom = T,\n               extend = 6\n  ) + \n  geom_hilight(node = 120,\n               type = \"gradient\", \n               gradient.direction = 'tr',\n               alpha = .8,\n               fill = \"#9ebcda\",\n               to.bottom = T,\n               extend = 5.6\n  ) + \n  geom_hilight(node = 78,\n               type = \"gradient\", \n               gradient.direction = 'tr',\n               alpha = .8,\n               fill = \"#8c6bb1\",\n               to.bottom = T,\n               extend = 3\n  ) + \n  geom_nodepoint(aes(fill=cut(support, c(0, 50, 75, 100))),\n                 shape=21, size=2) +\n  scale_fill_manual(values=c(\"black\", \"grey\", \"white\"),\n                    guide='legend', name='Bootstrap Percentage(BP)',\n                    breaks=c('(75,100]', '(50,75]', '(0,50]'),\n                    labels=expression(BP&gt;75, 50 &lt; BP * \"&lt;=75\", BP &lt;= 50)) + \n  geom_treescale(x = 0, y = 70, fontsize = 5, linesize = 2) + \n  geom_tree() + \n  theme(legend.background = element_roundrect(color = \"#969696\"))\n\np2\n\n\n\n\n\n\n\n\n\n####----add bar plot for Group information----####\nid &lt;- tree.sort.id\n\n\ngroup_info %&gt;%\n  dplyr::group_by(Group) %&gt;%\n  dplyr::summarise(count = n()) %&gt;%\n  dplyr::arrange(desc(Group)) %&gt;%\n  dplyr::mutate(cumsum = cumsum(count)) %&gt;%\n  dplyr::mutate(position = cumsum - 0.5 * count) %&gt;%\n  dplyr::mutate(Type = \"Group\")-&gt; position1\n\n\ngroup_info %&gt;%\n  dplyr::group_by(SupGroup) %&gt;%\n  dplyr::summarise(count = n()) %&gt;%\n  dplyr::arrange(desc(SupGroup)) %&gt;%\n  dplyr::mutate(cumsum = cumsum(count)) %&gt;%\n  dplyr::mutate(position = cumsum - 0.5 * count) %&gt;%\n  dplyr::mutate(Type = \"SupGroup\")-&gt; position2\n\n\n\n\ngroup_info %&gt;%\n  dplyr::mutate(ID = factor(ID, levels = rev(tree.sort.id), ordered = T)) %&gt;%\n  tidyr::pivot_longer(cols = -ID, names_to = \"Type\", values_to = \"Value\") %&gt;%\n  ggplot(aes(x = Type, y = ID)) + \n  geom_tile(aes(fill = Value), linewidth = 0, color = NA) + \n  geom_text(data = position1, aes(x = Type, y = position, label = Group),\n            size = 5,\n            color = \"#000000\") + \n  geom_text(data = position2, aes(x = Type, y = position, label = SupGroup),\n            angle = 90,\n            fontface = 3,\n            size = 6,\n            color = \"#ffffff\") + \n  scale_fill_manual(\n    values = c(\n      \"group_1\" = \"#addd8e\",\n      \"group_2\" = \"#41ab5d\",\n      \"group_3\" = \"#9ebcda\",\n      \"group_4\" = \"#8c6bb1\",\n      \"SubGroup_1\" = \"#238443\",\n      \"SubGroup_2\" = \"#88419d\"),\n    name = \"Group Info\") + \n  scale_x_discrete(position = \"top\") + \n  labs(x = \"\", y = \"\") + \n  theme_bw() + \n  theme(\n    panel.background = element_blank(),\n    panel.border = element_blank(),\n    panel.grid = element_blank(),\n    axis.text.y = element_blank(),\n    axis.ticks.y = element_blank(),\n    axis.text.x.top = element_text(size = 15, color = \"#000000\", angle = 45, hjust = 0, face=\"bold\"),\n    axis.ticks.x.top = element_blank(),\n    plot.background = element_blank(),\n    legend.background = element_roundrect(color = \"#969696\")\n  )-&gt; p_class\n\np_class\n\np_class %&gt;% insert_left(p2, width = 1.2)\n\n\n####---- add Other annotation information----####\n\n\nannotation_df %&gt;%\n  dplyr::mutate(GC_content = cut(GC_content, breaks = c(30,40,50,60,70,80), right = F)) %&gt;%\n  dplyr::mutate(Completeness = cut(Completeness, breaks = c(40,50,60,70,80,90), right = F)) %&gt;%\n  dplyr::mutate(Contamination = cut(Contamination, breaks = c(50,60,70,80,90,100), right = F)) %&gt;%\n  tidyr::pivot_longer(cols = -ID, names_to = \"Type\", values_to = \"Value\") %&gt;%\n  dplyr::mutate(Type = factor(Type, levels = c(\"GC_content\", \"Completeness\", \"Contamination\",\n                                               \"Source\", \"Habitate_Type\", \"RNA\"),\n                              ordered = T)) %&gt;%\n  dplyr::mutate(ID = factor(ID, levels = rev(tree.sort.id), ordered = T)) %&gt;%\n  ggplot(aes(x = Type, y = ID)) + \n  geom_tile(fill = \"#ffffff\", width = 0.8) + \n  geom_tile(data = . %&gt;% dplyr::filter(Type == \"GC_content\"),aes(fill = Value), width = 0.5, alpha = 0.6, color = \"white\") + \n  scale_fill_manual(values = c('#f0f9e8','#bae4bc','#7bccc4','#43a2ca','#0868ac'), \n                    name = \"GC_content\",\n                    guide = guide_legend(order = 1)) + \n  new_scale_fill() + \n  geom_tile(data = . %&gt;% dplyr::filter(Type == \"Completeness\"),aes(fill = Value), width = 0.5, alpha = 0.6, color = \"white\") +\n  scale_fill_manual(values = c('#f1eef6','#d7b5d8','#df65b0','#dd1c77','#980043'), \n                    name = \"Completeness\",\n                    guide = guide_legend(order = 2)) + \n  new_scale_fill() + \n  geom_tile(data = . %&gt;% dplyr::filter(Type == \"Contamination\"),aes(fill = Value), width = 0.5, alpha = 0.6, color = \"white\") + \n  scale_fill_manual(values = c('#f2f0f7','#cbc9e2','#9e9ac8','#756bb1','#54278f'), \n                    name = \"Contamination\",\n                    guide = guide_legend(order = 3)) + \n  new_scale_fill() + \n  geom_point(data = . %&gt;% dplyr::filter(Type == \"Source\"), aes(fill = Value), size = 7, alpha = 0.75, shape = 21, color = \"white\") + \n  scale_fill_manual(values = c('#8dd3c7','#ffffb3','#bebada','#fb8072','#80b1d3',\n                               '#fdb462','#b3de69','#fccde5','#d9d9d9','#bc80bd'), \n                    name = \"Source\",\n                    guide = guide_legend(order = 4)) + \n  new_scale_fill() + \n  geom_point(data = . %&gt;% dplyr::filter(Type == \"Habitate_Type\"), aes(fill = Value), size = 7, alpha = 0.75, shape = 21, color = \"white\") + \n  scale_fill_manual(values = c('#a6cee3','#1f78b4','#b2df8a'), \n                    name = \"Habitate_Type\",\n                    guide = guide_legend(order = 5)) + \n  new_scale_fill() + \n  geom_point(data = . %&gt;% dplyr::filter(Type == \"RNA\"), aes(fill = Value), size = 7, alpha = 0.75, shape = 21, color = \"white\") + \n  scale_fill_manual(values = c('#66c2a5','#fc8d62'), \n                    name = \"RNA\",\n                    guide = guide_legend(order = 6)) + \n  labs(x = \"\", y = \"\") + \n  scale_x_discrete(position = \"top\") + \n  theme_bw() + \n  theme(\n    panel.background = element_blank(),\n    panel.border = element_blank(),\n    panel.grid = element_blank(),\n    axis.text.y = element_blank(),\n    axis.ticks.y = element_blank(),\n    axis.text.x.top = element_text(size = 15, color = \"#000000\", angle = 45, hjust = 0, face=\"bold\"),\n    axis.ticks.x.top = element_blank(),\n    plot.background = element_blank(),\n    legend.background = element_roundrect(color = \"#969696\")\n  ) -&gt; p.annotation\n\np.annotation %&gt;% insert_left(p_class) %&gt;% insert_left(p2, width = 1.2)\n\n####---- add bar plot----####\n\np_bar &lt;- bar_df %&gt;%\n  dplyr::mutate(ID = factor(ID, levels = rev(tree.sort.id), ordered = T)) %&gt;%\n  ggplot() + \n  geom_bar(aes(x = Count, y = ID), fill = \"#bdbdbd\", stat = \"identity\") + \n  scale_x_continuous(expand = c(0,0), position = \"top\") + \n  geom_vline(xintercept = 4, linetype = 2) + \n  labs(x = \"\", y = \"\") + \n  theme_bw() +\n  theme(\n    panel.background = element_blank(),\n    panel.border = element_rect(linewidth = 1.5),\n    panel.grid = element_blank(),\n    axis.text.y = element_blank(),\n    axis.ticks.y = element_blank(),\n    axis.text.x = element_text(size = 15, color = \"#000000\", angle = 45, hjust = 0),\n    legend.background = element_roundrect(color = \"#969696\")\n  )\n\np_bar\n\n\n####----combine----####\np_combine &lt;- p_bar %&gt;% \n  insert_left(p.annotation, width = 3) %&gt;% \n  insert_left(p_class, width = 1) %&gt;% \n  insert_left(p2, width = 3.5)\n\n# p_combine\n\n\nggsave(filename = \"p_combine1.pdf\",\n       plot = p_combine,\n       height = 20,\n       width = 18)\n\n####----sessionInfo----####\nsessionInfo()",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>使用R语言画*ISME*中的进化树</span>"
    ]
  }
]